AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure stack for ProjPau application

Resources:

  ProjPauS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: proj-pau-s3

  ProjPauApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ProjPauGateWay

  ProjPaulLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPaulLambda
      Handler: index.handler
      Role: arn:aws:iam::788174142154:role/service-role/ProjPaulLambda-role-hx3598sd
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaulambda.zip

  ProjPauSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ProjPauSNS

  ProjPauSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauSQS

  ProjPauSQSDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauSQSDLQ

  ProjPauEmailSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauEmailSQS

  ProjPauEmailDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauEmailDLQ

  ProjPauTranslate:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauTranslate
      Handler: index.handler
      Role: arn:aws:lambda:eu-west-1:788174142154:function:ProjPauTranslate
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpautranslate.zip

  ProjPauComprehend:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauComprehend
      Handler: index.handler
      Role: arn:aws:lambda:eu-west-1:788174142154:function:ProjPauComprehend
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaucomprehend.zip

  ProjPauLambdaSES:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauLambdaSES
      Handler: index.handler
      Role: arn:aws:lambda:eu-west-1:788174142154:function:ProjPauLambdaSES
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaulambdases.zip

  ProjPauDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ProjPauDB
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAYPERREQUEST

  ProjPauSESEmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: paul.heinecke@student.htw-berlin.de
AWSTemplateFormatVersion: '2010-09-09'
Description: Infrastructure stack for ProjPau application

Resources:

  ProjPauS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: proj-pau-s3

  ProjPauApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ProjPauGateWay

  ApiGatewayProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ProjPauApiGateway
      ParentId: !GetAtt ProjPauApiGateway.RootResourceId
      PathPart: '{proxy+}'

  ApiGatewayAnyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ProjPauApiGateway
      ResourceId: !Ref ApiGatewayProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt ProjPaulLambda.Arn

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayAnyMethod
    Properties:
      RestApiId: !Ref ProjPauApiGateway
      StageName: prod

  ProjPaulLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPaulLambda
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::788174142154:role/service-role/ProjPaulLambda-role-hx3598sd
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaulambda.zip

  ProjPauSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ProjPauSNS

  ProjPauSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauSQS

  ProjPauSQSDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauSQSDLQ

  ProjPauEmailSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauEmailSQS

  ProjPauEmailDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ProjPauEmailDLQ

  ProjPauTranslate:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauTranslate
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::788174142154:role/ProjPauTranslateIAM
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpautranslate.zip

  ProjPauComprehend:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauComprehend
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::788174142154:role/service-role/ProjPauComprehend-role-d4yimzfh
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaucomprehend.zip

  ProjPauLambdaSES:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProjPauLambdaSES
      Handler: lambda_function.lambda_handler
      Role: arn:aws:iam::788174142154:role/service-role/ProjPauLambdaSES-role-f40be1w9
      Runtime: python3.13
      Code:
        S3Bucket: proj-pau-s3
        S3Key: lambda/projpaulambdases.zip

  ProjPauDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ProjPauDB
      AttributeDefinitions:
        - AttributeName: MessageID
          AttributeType: S
      KeySchema:
        - AttributeName: MessageID
          KeyType: HASH
      BillingMode: PAYPERREQUEST

  ProjPauSESEmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: paul.heinecke@student.htw-berlin.de

  SNS2SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues: [!Ref ProjPauSQS]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt ProjPauSQS.Arn
            Condition:
              ArnEquals: 
                aws:SourceArn: !Ref ProjPauSNS

  SNS2LambdaSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref ProjPauSNS
      Protocol: lambda
      Endpoint: !GetAtt ProjPaulLambda.Arn

  SNS2EmailSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues: [!Ref ProjPauEmailSQS]
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt ProjPauEmailSQS.Arn
            Condition:
              ArnEquals: 
                aws:SourceArn: !Ref ProjPauSNS

  SQS2TranslateEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt ProjPauSQS.Arn
      FunctionName: !GetAtt ProjPauTranslate.Arn
      BatchSize: 10

  ComprehendInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ProjPauComprehend.Arn
      Principal: lambda.amazonaws.com
      SourceArn: !GetAtt ProjPauTranslate.Arn

  EmailSQS2SESEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt ProjPauEmailSQS.Arn
      FunctionName: !GetAtt ProjPauLambdaSES.Arn
      BatchSize: 10

  APIGatewayLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ProjPaulLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:eu-west-1:788174142154:tvfewqyeq2/*/*"

  DynamoDBPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: ProjPauDynamoDBAccess
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:Query
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/ProjPauDB"
